# GitHub Action workflows to build and test the plug-in on MacOS
#
# Adapted from Wireshark's repository https://gitlab.com/wireshark/wireshark/-/tree/master/.github/workflows

name: Build and test MacOS plug-in

on:
   push:
      branches:
         - main
      tags:
         - '**'
   pull_request:
      branches:
         - main

env:
   WIRESHARK_BRANCH: release-3.6
   WIRESHARK_QT_VERSION: 5.15.2

jobs:
   intree:
      name: Build and test in-tree plugin
      runs-on: macos-latest
      steps:
         - name: Checkout Wireshark
           run: |
              git init
              git remote add -t "${{ env.WIRESHARK_BRANCH }}" -f origin https://gitlab.com/wireshark/wireshark.git
              git checkout ${{ env.WIRESHARK_BRANCH }}
         - name: Checkout plug-in
           uses: actions/checkout@v2
           with:
              path: plugins/epan/v2g
         - name: Apply patch
           run: |
              git apply plugins/epan/v2g/extern/wireshark-${{ env.WIRESHARK_BRANCH }}.patch

         - name: Set up Python 3.8
           uses: actions/setup-python@v2
           with:
              python-version: 3.8
         - name: Set up Ruby 2.6
           uses: actions/setup-ruby@v1.1.2
           with:
              ruby-version: '2.6'
         - name: Update brew packages
           run: brew update
         - name: Install dependencies for a in-tree build
           run: |
              brew install \
                  c-ares \
                  glib \
                  libgcrypt \
                  gnutls \
                  lua@5.1 \
                  cmake \
                  ninja \
                  nghttp2 \
                  snappy \
                  lz4 \
                  libxml2 \
                  libmaxminddb \
                  libsmi \
                  spandsp \
                  brotli \
                  minizip \
                  zstd \
                  libssh \
                  libilbc \
                  speexdsp \
                  gettext \
                  qt5 || true

         - name: Install asciidoctor
           run: gem install asciidoctor

         - name: Build in-tree
           run: |
              mkdir build
              cd build
              cmake ..
              make v2gexi tshark

         - name: Copy plugin artifacts
           run: |
              mkdir v2g-artifact
              cp plugins/epan/v2g/dissector/v2g.lua v2g-artifact/v2g.lua
              cp build/run/Wireshark.app/Contents/PlugIns/wireshark/3-6/epan/v2gexi.so v2g-artifact/v2gexi.so
         - name: Upload MacOS artifacts
           uses: actions/upload-artifact@v2
           with:
              name: packages
              path: v2g-artifact

   release:
      name: Release
      runs-on: macos-latest
      needs: intree
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      steps:
         - name: Download MacOS artifacts
           uses: actions/download-artifact@v2
           with:
              name: packages
              path: v2g-artifact
         - name: Tar artifact
           run: |
              tar -cf v2g-artifact.tar -C v2g-artifact .
         - name: Create a release
           id: create_release
           uses: actions/create-release@v1
           with:
              tag_name: ${{ github.ref }}
              release_name: MacOS V2G Wireshark Plug-in ${{ github.ref }}
              draft: true
              prerelease: false
         - name: Upload release asset
           uses: actions/upload-release-asset@v1
           with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} 
              asset_path: ./v2g-artifact.tar
              asset_name: v2g-${{ github.ref_name }}-macos-x86-64.tar
              asset_content_type: application/x-tar
